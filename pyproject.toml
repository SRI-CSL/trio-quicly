[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "trioquic"
description = "An implementation of QUIC using Python async framework Trio"
readme = "README.rst"
license = "BSD-3-Clause"
authors = [ "Linda Briesemeister <linda.briesemeister@sri.com>" ]
homepage = "https://github.com/SRI-CSL/trio-quic"
keywords = [
    "async",
    "io",
    "networking",
    "trio",
    "QUIC"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
]
version = "0.1"
packages = [ { include = "trioquic" } ]


[tool.poetry.dependencies]
python = ">3.9.0,<3.9.1 || >3.9.1"
cryptography = ">=44.0.0"
trio = ">=0.27.0"
pyopenssl = ">=24.3.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=8.3.4"
coverage = { version = ">=7.6.1", extras = ["toml"], optional = true }

[tool.poetry.group.docs]
optional = true
[tool.poetry.group.docs.dependencies]
Sphinx = "^5.1.1"
#sphinx_autodoc_typehints
#sphinxcontrib-trio

# Python-style entrypoints and scripts are easily expressed
#[tool.poetry.scripts]
#my-script = "my_package:main"

[tool.coverage.run]
source = ["trioquic"]

[tool.mypy]
disallow_untyped_calls = true
disallow_untyped_decorators = true
ignore_missing_imports = true
strict_optional = false
warn_redundant_casts = true
warn_unused_ignores = true

[tool.ruff]
select = [
    "E",  # pycodestyle
    "F",  # Pyflakes
    "W",  # pycodestyle
    "I",  # isort
]

[tool.setuptools.dynamic]
version = {attr = "trioquic.__version__"}
